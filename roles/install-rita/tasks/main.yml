# Sets up the babeld as a system service

- name: Check for Rita bianry
  local_action: stat path="{{playbook_dir}}/rita"
  register: rita_bin

- name: Rita bin not present, download latest release
  get_url:
    url: "{{rita_bin_url}}"
    dest: "/usr/bin/rita"
    mode: 0755
    force: true
  become: true
  when: not rita_bin.stat.exists

- name: Copy rita binary
  copy:
    src: "{{playbook_dir}}/rita"
    dest: /usr/bin/rita
    mode: 0755
  become: true
  when: rita_bin.stat.exists

- name: Fail on nonsystemd systems
  fail:
    msg: "No support for non systemd services, please add support for your init system!"
  when: "ansible_service_mgr != 'systemd'"

- name: Stop the process to update config
  systemd:
    name: rita-exit
    state: stopped
    enabled: yes
  become: true
  ignore_errors: true

- name: Copy the rita config
  template:
    src: rita.toml.j2
    dest: /etc/rita.toml
  become: true

- include_tasks: systemd.yml

- name: Open Rita port
  iptables:
    chain: INPUT
    protocol: "{{item[0]}}"
    destination_port: "{{item[1]}}"
    jump: ACCEPT
    ip_version: "{{item[2]}}"
    ctstate: NEW
  become: true
  with_nested:
    - ["tcp", "udp"]
    - ["{{rita_port}}", "{{bounty_port}}", "{{exit_registration_port}}"]
    - ["ipv4", "ipv6"]

- name: Open WireGuard port range
  iptables:
    chain: INPUT
    destination_port: "{{firewall_start_port}}:"
    protocol: udp
    ip_version: "{{item}}"
    jump: ACCEPT
    ctstate: NEW
  become: true
  with_items:
    - ipv4
    - ipv6

- name: Add dns servers
  lineinfile:
    dest: /etc/resolv.conf
    line: "{{item}}"
    state: present
  become: true
  with_items: "{{dns_servers}}"

- name: Configure IPv6 settings for direct peer interfaces
  lineinfile:
    path: /etc/sysconfig/network-scripts/ifcfg-{{item[0]}}
    state: present
    regexp: "^%{{item[1].regex}}"
    line: "{{item[1].line}}"
  with_nested:
    - "{{mesh_interfaces}}"
    - [
        { line: "IPV6INIT=yes", regex: "IPV6INIT" },
        { line: "IPV6_AUTOCONF=no", regex: "IPV6_AUTOCONF" },
        { line: "IPV6_DEFROUTE=no", regex: "IPV6_DEFROUTE" },
        { line: "IPV6_FAILURE_FATAL=yes", regex: "IPV6_FAILURE_FATAL" },
        { line: "IPV6_PEERDNS=no", regex: "IPV6_PEERDNS" },
        { line: "ONBOOT=yes", regex: "ONBOOT" },
      ]
